{"ast":null,"code":"/**\n * React Router DOM v6.4.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_enhanceManualRouteObjects, Router, useHref, createPath, useResolvedPath, useMatch, UNSAFE_DataRouterStateContext, useNavigate, useLocation, UNSAFE_DataRouterContext, UNSAFE_RouteContext, useMatches, useNavigation } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_DataStaticRouterContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_enhanceManualRouteObjects, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { createRouter, createBrowserHistory, createHashHistory, matchPath, invariant } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && ( // Ignore everything but left clicks\n  !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\n\n\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\n\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach(value => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nfunction getFormSubmissionInfo(target, defaultAction, options) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger = options.submissionTrigger;\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n    method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n    encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n    formData = new FormData(form); // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let {\n    protocol,\n    host\n  } = window.location;\n  let url = new URL(action, protocol + \"//\" + host);\n  return {\n    url,\n    method,\n    encType,\n    formData\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n      _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n      _excluded3 = [\"reloadDocument\", \"replace\", \"method\", \"action\", \"onSubmit\", \"fetcherKey\", \"routeId\", \"relative\"]; //#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createBrowserRouter(routes, opts) {\n  var _window;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window = window) == null ? void 0 : _window.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n\nfunction createHashRouter(routes, opts) {\n  var _window2;\n\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || ((_window2 = window) == null ? void 0 : _window2.__staticRouterHydrationData),\n    routes: UNSAFE_enhanceManualRouteObjects(routes)\n  }).initialize();\n}\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\n\n\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\n\n\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\n\n\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    history\n  } = _ref3;\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n    onClick,\n    relative,\n    reloadDocument,\n    replace,\n    state,\n    target,\n    to,\n    preventScrollReset\n  } = _ref4,\n      rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n\n  function handleClick(event) {\n    if (onClick) onClick(event);\n\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: href,\n      onClick: reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n    \"aria-current\": ariaCurrentProp = \"page\",\n    caseSensitive = false,\n    className: classNameProp = \"\",\n    end = false,\n    style: styleProp,\n    to,\n    children\n  } = _ref5,\n      rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n  let path = useResolvedPath(to);\n  let match = useMatch({\n    path: path.pathname,\n    end,\n    caseSensitive\n  });\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let nextLocation = routerState == null ? void 0 : routerState.navigation.location;\n  let nextPath = useResolvedPath(nextLocation || \"\");\n  let nextMatch = React.useMemo(() => nextLocation ? matchPath({\n    path: path.pathname,\n    end,\n    caseSensitive\n  }, nextPath.pathname) : null, [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]);\n  let isPending = nextMatch != null;\n  let isActive = match != null;\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\n\n\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n    reloadDocument,\n    replace,\n    method = defaultMethod,\n    action,\n    onSubmit,\n    fetcherKey,\n    routeId,\n    relative\n  } = _ref6,\n      props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    submit(submitter || event.currentTarget, {\n      method,\n      replace,\n      relative\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\n\n\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\n\n\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\n\n\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let location = useLocation();\n  let searchParams = React.useMemo(() => getSearchParamsForLocation(location.search, defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\n\n\nfunction useSubmit() {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey, routeId) {\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useSubmitImpl must be used within a Data Router\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let defaultAction = useFormAction();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      method,\n      encType,\n      formData,\n      url\n    } = getFormSubmissionInfo(target, defaultAction, options);\n    let href = url.pathname + url.search;\n    let opts = {\n      replace: options.replace,\n      formData,\n      formMethod: method,\n      formEncType: encType\n    };\n\n    if (fetcherKey) {\n      !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for useFetcher()\") : invariant(false) : void 0;\n      router.fetch(fetcherKey, routeId, href, opts);\n    } else {\n      router.navigate(href, opts);\n    }\n  }, [defaultAction, router, fetcherKey, routeId]);\n}\n\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFormAction must be used inside a RouteContext\") : invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action != null ? action : \".\";\n  let path = useResolvedPath(resolvedAction, {\n    relative\n  }); // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n\n  let location = useLocation();\n\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash; // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetcherKey: fetcherKey,\n      routeId: routeId\n    }));\n  });\n\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\n\nfunction useFetcher() {\n  var _route$matches;\n\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used within a Data Router\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher must be used inside a RouteContext\") : invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.Form()\") : invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No router available for fetcher.load()\") : invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"No routeId available for fetcher.load()\") : invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No fetcher available to clean up from useFetcher()\");\n        return;\n      }\n\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\n\n\nfunction useFetchers() {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useFetchers must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\n\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(UNSAFE_DataRouterContext);\n  !dataRouterContext ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterContext\") : invariant(false) : void 0;\n  let {\n    router\n  } = dataRouterContext;\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !(router != null && state != null) ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"useScrollRestoration must be used within a DataRouterStateContext\") : invariant(false) : void 0;\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = state; // Trigger manual scroll restoration while we're active\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []); // Save positions on unload\n\n  useBeforeUnload(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches])); // Read in any saved scroll locations\n\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {// no-op, use default empty object\n    }\n  }, [storageKey]); // Enable scroll restoration in the router\n\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKey);\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]); // Restore scrolling when state.restoreScrollPosition changes\n\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    } // been here before, scroll to it\n\n\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    } // try to scroll to the hash\n\n\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    } // Opt out of scroll reset if this link requested it\n\n\n    if (preventScrollReset === true) {\n      return;\n    } // otherwise go to the top on new locations\n\n\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n} //#endregion\n\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };","map":{"version":3,"mappings":"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","names":["defaultMethod","defaultEncType","isHtmlElement","object","tagName","isButtonElement","toLowerCase","isFormElement","isInputElement","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","target","button","init","URLSearchParams","Array","isArray","Object","keys","reduce","memo","key","value","concat","map","v","locationSearch","defaultSearchParams","searchParams","createSearchParams","has","getAll","forEach","append","getFormSubmissionInfo","defaultAction","options","method","action","encType","formData","submissionTrigger","getAttribute","FormData","name","type","form","Error","protocol","host","window","location","url","URL","routes","opts","createRouter","basename","history","createBrowserHistory","hydrationData","__staticRouterHydrationData","enhanceManualRouteObjects","initialize","createHashHistory","BrowserRouter","_ref","children","historyRef","React","useRef","current","v5Compat","state","setState","useState","useLayoutEffect","listen","Router","navigationType","navigator","HashRouter","_ref2","HistoryRouter","_ref3","process","displayName","Link","forwardRef","LinkWithRef","ref","onClick","relative","reloadDocument","replace","to","preventScrollReset","_ref4","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_ref5","path","useResolvedPath","match","useMatch","pathname","routerState","useContext","DataRouterStateContext","nextLocation","navigation","nextPath","nextMatch","useMemo","matchPath","isPending","isActive","ariaCurrent","undefined","filter","Boolean","join","Form","props","FormImpl","forwardedRef","onSubmit","fetcherKey","routeId","_ref6","submit","useSubmitImpl","formMethod","formAction","useFormAction","submitHandler","preventDefault","submitter","nativeEvent","currentTarget","ScrollRestoration","_ref7","getKey","storageKey","useScrollRestoration","_temp","replaceProp","navigate","useNavigate","useLocation","useCallback","shouldProcessLinkClick","createPath","useSearchParams","defaultInit","defaultSearchParamsRef","getSearchParamsForLocation","search","setSearchParams","nextInit","navigateOptions","newSearchParams","useSubmit","dataRouterContext","DataRouterContext","router","document","formEncType","invariant","fetch","_temp2","routeContext","RouteContext","matches","slice","resolvedAction","hash","route","index","params","delete","toString","createFetcherForm","FetcherForm","fetcherId","useFetcher","length","id","String","load","fetcher","getFetcher","fetcherWithComponents","useEffect","console","warn","deleteFetcher","useFetchers","fetchers","values","SCROLL_RESTORATION_STORAGE_KEY","savedScrollPositions","_temp3","useMatches","useNavigation","restoreScrollPosition","scrollRestoration","useBeforeUnload","scrollY","sessionStorage","setItem","JSON","stringify","sessionPositions","getItem","parse","e","disableScrollRestoration","enableScrollRestoration","scrollTo","el","getElementById","scrollIntoView","callback","addEventListener","removeEventListener","warning","cond","message"],"sources":["C:\\Users\\USER\\Desktop\\booking-app\\client\\node_modules\\react-router-dom\\dom.ts","C:\\Users\\USER\\Desktop\\booking-app\\client\\node_modules\\react-router-dom\\index.tsx"],"sourcesContent":["import type { FormEncType, FormMethod } from \"@remix-run/router\";\nimport type { RelativeRoutingType } from \"react-router\";\n\nexport const defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  for (let key of defaultSearchParams.keys()) {\n    if (!searchParams.has(key)) {\n      defaultSearchParams.getAll(key).forEach((value) => {\n        searchParams.append(key, value);\n      });\n    }\n  }\n\n  return searchParams;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: FormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   *\n   * Note: It is assumed the path is already resolved. If you need to resolve a\n   * relative path, use `useFormAction`.\n   */\n  action?: string;\n\n  /**\n   * The action URL used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n}\n\nexport function getFormSubmissionInfo(\n  target:\n    | HTMLFormElement\n    | HTMLButtonElement\n    | HTMLInputElement\n    | FormData\n    | URLSearchParams\n    | { [name: string]: string }\n    | null,\n  defaultAction: string,\n  options: SubmitOptions\n): {\n  url: URL;\n  method: string;\n  encType: string;\n  formData: FormData;\n} {\n  let method: string;\n  let action: string;\n  let encType: string;\n  let formData: FormData;\n\n  if (isFormElement(target)) {\n    let submissionTrigger: HTMLButtonElement | HTMLInputElement = (\n      options as any\n    ).submissionTrigger;\n\n    method = options.method || target.getAttribute(\"method\") || defaultMethod;\n    action = options.action || target.getAttribute(\"action\") || defaultAction;\n    encType =\n      options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n\n    formData = new FormData(target);\n\n    if (submissionTrigger && submissionTrigger.name) {\n      formData.append(submissionTrigger.name, submissionTrigger.value);\n    }\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    method =\n      options.method ||\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    action =\n      options.action ||\n      target.getAttribute(\"formaction\") ||\n      form.getAttribute(\"action\") ||\n      defaultAction;\n    encType =\n      options.encType ||\n      target.getAttribute(\"formenctype\") ||\n      form.getAttribute(\"enctype\") ||\n      defaultEncType;\n\n    formData = new FormData(form);\n\n    // Include name + value from a <button>, appending in case the button name\n    // matches an existing input name\n    if (target.name) {\n      formData.append(target.name, target.value);\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = options.method || defaultMethod;\n    action = options.action || defaultAction;\n    encType = options.encType || defaultEncType;\n\n    if (target instanceof FormData) {\n      formData = target;\n    } else {\n      formData = new FormData();\n\n      if (target instanceof URLSearchParams) {\n        for (let [name, value] of target) {\n          formData.append(name, value);\n        }\n      } else if (target != null) {\n        for (let name of Object.keys(target)) {\n          formData.append(name, target[name]);\n        }\n      }\n    }\n  }\n\n  let { protocol, host } = window.location;\n  let url = new URL(action, `${protocol}//${host}`);\n\n  return { url, method, encType, formData };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  NavigateOptions,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_enhanceManualRouteObjects as enhanceManualRouteObjects,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HydrationState,\n  Router as RemixRouter,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  invariant,\n  matchPath,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  DataMemoryRouterProps,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteProps,\n  JsonFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_DataStaticRouterContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_enhanceManualRouteObjects,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    hydrationData?: HydrationState;\n    window?: Window;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || window?.__staticRouterHydrationData,\n    routes: enhanceManualRouteObjects(routes),\n  }).initialize();\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let href = useHref(to, { relative });\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to);\n    let match = useMatch({ path: path.pathname, end, caseSensitive });\n\n    let routerState = React.useContext(DataRouterStateContext);\n    let nextLocation = routerState?.navigation.location;\n    let nextPath = useResolvedPath(nextLocation || \"\");\n    let nextMatch = React.useMemo(\n      () =>\n        nextLocation\n          ? matchPath(\n              { path: path.pathname, end, caseSensitive },\n              nextPath.pathname\n            )\n          : null,\n      [nextLocation, path.pathname, caseSensitive, end, nextPath.pathname]\n    );\n\n    let isPending = nextMatch != null;\n    let isActive = match != null;\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FormProps extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: FormMethod;\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    return <FormImpl {...props} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  fetcherKey?: string;\n  routeId?: string;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      fetcherKey,\n      routeId,\n      relative,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let submit = useSubmitImpl(fetcherKey, routeId);\n    let formMethod: FormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      submit(submitter || event.currentTarget, { method, replace, relative });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ninterface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      getSearchParamsForLocation(\n        location.search,\n        defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\ntype SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\ntype SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | { [name: string]: string }\n  | null;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  return useSubmitImpl();\n}\n\nfunction useSubmitImpl(fetcherKey?: string, routeId?: string): SubmitFunction {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useSubmitImpl must be used within a Data Router\"\n  );\n  let { router } = dataRouterContext;\n  let defaultAction = useFormAction();\n\n  return React.useCallback(\n    (target, options = {}) => {\n      if (typeof document === \"undefined\") {\n        throw new Error(\n          \"You are calling submit during the server render. \" +\n            \"Try calling submit within a `useEffect` or callback instead.\"\n        );\n      }\n\n      let { method, encType, formData, url } = getFormSubmissionInfo(\n        target,\n        defaultAction,\n        options\n      );\n\n      let href = url.pathname + url.search;\n      let opts = {\n        replace: options.replace,\n        formData,\n        formMethod: method as FormMethod,\n        formEncType: encType as FormEncType,\n      };\n      if (fetcherKey) {\n        invariant(routeId != null, \"No routeId available for useFetcher()\");\n        router.fetch(fetcherKey, routeId, href, opts);\n      } else {\n        router.navigate(href, opts);\n      }\n    },\n    [defaultAction, router, fetcherKey, routeId]\n  );\n}\n\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  let resolvedAction = action ?? \".\";\n  let path = useResolvedPath(resolvedAction, { relative });\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FormProps>(\n    (props, ref) => {\n      return (\n        <FormImpl\n          {...props}\n          ref={ref}\n          fetcherKey={fetcherKey}\n          routeId={routeId}\n        />\n      );\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: (\n    target: SubmitTarget,\n    // Fetchers cannot replace because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\">\n  ) => void;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(dataRouterContext, `useFetcher must be used within a Data Router`);\n  let { router } = dataRouterContext;\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitImpl(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No fetcher available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, `useFetchers must be used within a DataRouterStateContext`);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  let dataRouterContext = React.useContext(DataRouterContext);\n  invariant(\n    dataRouterContext,\n    \"useScrollRestoration must be used within a DataRouterContext\"\n  );\n  let { router } = dataRouterContext;\n  let state = React.useContext(DataRouterStateContext);\n\n  invariant(\n    router != null && state != null,\n    \"useScrollRestoration must be used within a DataRouterStateContext\"\n  );\n  let { restoreScrollPosition, preventScrollReset } = state;\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on unload\n  useBeforeUnload(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  React.useLayoutEffect(() => {\n    try {\n      let sessionPositions = sessionStorage.getItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY\n      );\n      if (sessionPositions) {\n        savedScrollPositions = JSON.parse(sessionPositions);\n      }\n    } catch (e) {\n      // no-op, use default empty object\n    }\n  }, [storageKey]);\n\n  // Enable scroll restoration in the router\n  React.useLayoutEffect(() => {\n    let disableScrollRestoration = router?.enableScrollRestoration(\n      savedScrollPositions,\n      () => window.scrollY,\n      getKey\n    );\n    return () => disableScrollRestoration && disableScrollRestoration();\n  }, [router, getKey]);\n\n  // Restore scrolling when state.restoreScrollPosition changes\n  React.useLayoutEffect(() => {\n    // Explicit false means don't do anything (used for submissions)\n    if (restoreScrollPosition === false) {\n      return;\n    }\n\n    // been here before, scroll to it\n    if (typeof restoreScrollPosition === \"number\") {\n      window.scrollTo(0, restoreScrollPosition);\n      return;\n    }\n\n    // try to scroll to the hash\n    if (location.hash) {\n      let el = document.getElementById(location.hash.slice(1));\n      if (el) {\n        el.scrollIntoView();\n        return;\n      }\n    }\n\n    // Opt out of scroll reset if this link requested it\n    if (preventScrollReset === true) {\n      return;\n    }\n\n    // otherwise go to the top on new locations\n    window.scrollTo(0, 0);\n  }, [location, restoreScrollPosition, preventScrollReset]);\n}\n\nfunction useBeforeUnload(callback: () => any): void {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Utils\n////////////////////////////////////////////////////////////////////////////////\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n//#endregion\n"]},"metadata":{},"sourceType":"module"}